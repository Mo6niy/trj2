
// Requires: https://plugins.jenkins.io/pipeline-utility-steps/
// Available in Jenkins Plugins
//
pipeline {
    // Use any available agent
    agent any
    // Accept parameter from triger
    parameters {
        string(name: 'task_id')
         string(name: 'CLOUD_TYPE', defaultValue: 'aaaaaaa', description: 'scope of cluster')
        
    }
    // Create global available environment variables

    // Execute stages
    stages {
        stage("Get variables from WorkerAPI") {
            steps{
                script {
                    
                    // REST Call to WorkerAPI endpoint
                    // Requires: https://github.com/jenkinsci/http-request-plugin
                    // Available in Jenkins Plugins
                    //
                  //  def response =                    
                  //  def jsonObj = readJSON text: response.content
                    import groovy.json.JsonSlurper

                    def inputFile = new File("$WORKSPACE/json")
                    def InputJSON = new JsonSlurper().parseText(inputFile.text)
                    InputJSON.each{ println it }
                    
                    // Get values from JSON
                   // def cloudType = jsonObj.cloud_type
    
                    // DEBUG: Print values to console
                   // println "CLOUD_TYPE: ${cloudType}" 
                    
                    // Set variable with cloud type to use in post action  
                   // CLOUD_TYPE="${cloudType}"
                   
                }
            }
        }
    }
    post { 
        success { 
            script{
                // Execute different jobs based on cloud type value
                if("$CLOUD_TYPE" == "aws"){
                    echo "Cloud type is: $CLOUD_TYPE"
                    // Build Required Job with providing parameters
                    build job: 'Pipe2', 
                        parameters: [
                            string(name: 'CLOUD_TYPE', value: "$CLOUD_TYPE" )
                           
                        ]
                } else if ("$CLOUD_TYPE" == "azure") {
                    echo "Cloud type is: $CLOUD_TYPE"
                    // Build Required Job with providing parameters
                    build job: 'Pipe3', 
                        parameters: [
                            string(name: 'CLOUD_TYPE', value: "$CLOUD_TYPE" )
                           
                        ]
                } else {
                    echo "Not supported cloud type"
                }
            }
        }
    }
}