
pipeline {
    
    agent any
    
    parameters {
        string(name: 'ID', defaultValue: '')
        string(name: 'CLUSTER_NAME', defaultValue: '')
        string(name: 'REGION', defaultValue: '')
        string(name: 'MULTI_AZ', defaultValue: '')
        string(name: 'ACTION_TYPE', defaultValue: '')
        string(name: 'K8S_VERSION', defaultValue: '')
        string(name: 'NODE_TYPE', defaultValue: '')
        string(name: 'NODE_IMAGE', defaultValue: '')
        string(name: 'NODES_MIN', defaultValue: '')
        string(name: 'NODES_MAX', defaultValue: '')
        string(name: 'NODES_INITIAL', defaultValue: '')
        string(name: 'VIRTUAL_NETWORK', defaultValue: '')
        string(name: 'CLOUD_PROVIDER', defaultValue: '')
        string(name: 'GCP_PROJECT', defaultValue: '')
        string(name: 'GCP_CREDENTIALS', defaultValue: '')
        string(name: 'AWS_ACCESS_KEY_ID', defaultValue: '')
        string(name: 'AWS_SECRET_ACCESS_KEY', defaultValue: '')
        string(name: 'ARM_SUBSCRIPTION_ID', defaultValue: '')
        string(name: 'ARM_CLIENT_ID', defaultValue: '')
        string(name: 'ARM_CLIENT_SECRET', defaultValue: '')
        string(name: 'ARM_TENANT_ID', defaultValue: '')
    }

    stages {
        stage("Get JSON") {
            steps{
                script {
                 echo "Hello ${params.CLOUD_PROVIDER}"
                 echo "Hello ${params.CLUSTER_NAME}" 
                 sh '''
                 ls
                 export type=$(cat ./json | /tmp/jq .cloud_type)
                 echo $type

                 '''
                }
            }
        }
    }
    post { 
        success { 
            script{

                    echo "This is post action, task id is: ${params.CLOUD_PROVIDER}"
                    // Build Required Job with providing parameters
                    build job: 'DeployEKS', 
                        parameters: [
                            string(name: 'ID', value: "${params.ID}" )
                            
                            
                           
                        ]
                } 
        }
    }
}